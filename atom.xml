<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[4waisenkinder]]></title>
  <link href="http://4waisenkinder.github.io/atom.xml" rel="self"/>
  <link href="http://4waisenkinder.github.io/"/>
  <updated>2013-07-10T20:44:52+02:00</updated>
  <id>http://4waisenkinder.github.io/</id>
  <author>
    <name><![CDATA[Stefan Judis, Patrick Venetz, André Kussmann, Bernhard Weisshuhn]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA["shrinkwrap" and how to deal with a dependency fu** up]]></title>
    <link href="http://4waisenkinder.github.io/blog/2013/07/10/why-you-should-use-npm-shrinkwrap-and-how-to-deal-with-a-dependency-fu-star-star-up/"/>
    <updated>2013-07-10T19:13:00+02:00</updated>
    <id>http://4waisenkinder.github.io/blog/2013/07/10/why-you-should-use-npm-shrinkwrap-and-how-to-deal-with-a-dependency-fu-star-star-up</id>
    <content type="html"><![CDATA[<p>A few people may have noticed, that <code>npm install grunt</code> was failing today. According to the pull requests made, it was failing for 10 ( ! ) hours. When you think right know, that this is not a big deal, you probably do not use it in production. Because then it becomes a big problem very quickly.</p>

<!-- more -->


<p>The reason for failing was a first renamed and later removed dependency of grunt itself. Grunt defines its dependencies ( defined inside of the <code>package.json</code>, if you are not familiar with npm ) with  a <code>~</code> in front of each version number. That is quite common and there is nothing special about it. The <a href="https://npmjs.org/doc/json.html#Tilde-Version-Ranges">tilde</a> defines, that every version greater than the specifed one and less than the next major release is fine to install.</p>

<p>What happened exactly, was that npm was not able to find a version of a particular dependency that fits this conditions ( because of renaming and removing ). And that is it. Nothing special about it, but an important insight.</p>

<p><strong>Whenever we publish something on npm, we have to let it there &ndash; no renaming or removing. There can always be people using it and it can screw up their build!</strong></p>

<p>However, we had to figure out a workaround today quickly, and that is what we did until it was fixed.</p>

<p>We forked grunt at Github. Fixed the dependency problem and set the &ldquo;new&rdquo; grunt as our project dependency. Npm allows you to set dependencies that are not published at npm easily. That can be quiet handy from time to time. ;)</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>"devDependencies": {
</span><span class='line'>  "grunt": "git://github.com/you/your-grunt-fork.git"
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>Later on there were a few discussions about npm dependency handling on Twitter and <a href="https://twitter.com/asciidisco">@asciidisco</a> pointed me into the direction of <code>npm shrinkwrap</code>.</p>

<p>This command locks all your installed dependencies and writes a new file called <strong>npm-shrinkwrap.json</strong>.</p>

<p>This file is similar to php&rsquo;s <strong>composer.lock</strong> or ruby&rsquo;s <strong>Gemfile.lock</strong>. When you call <code>npm install</code> later on it installs the locked versions written in this file. The version numbers are locked recursively, so that you are safe on production level without any bad surprises.</p>

<p>There can always be a version jump in a dependency, which is quite welcome, but I don&rsquo;t want check out if it works on production side first&hellip;</p>

<p>So the solution is:</p>

<p><strong>Stay with your package.json and define dependencies with &lsquo;>=&rsquo; or &lsquo;~&rsquo; to receive the newest stuff locally, but lock all dependencies for production.</strong></p>

<p>As always opinions and solutions are very welcome about this topic. ;)</p>
<div class='octopress-authorbox'>
	<div class="author-pic">
		<img src="http://www.gravatar.com/avatar/22725c2d3eb331146549bf0d5d3c050c" alt="Stefan Judis" />
	</div>
	
	<div class="author-about">
		<h3>Stefan Judis</h3>
		<p>Frontend lover</p>
		<ul class="author-links">
			
			<li>
			<a href="http://twitter.com/stefanjudis">@stefanjudis</a>
			</li>
			
			
		</ul>
	</div>
</div>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[See how your project performs at Travis CI]]></title>
    <link href="http://4waisenkinder.github.io/blog/2013/07/07/see-how-your-project-performs-at-travis-ci/"/>
    <updated>2013-07-07T14:50:00+02:00</updated>
    <id>http://4waisenkinder.github.io/blog/2013/07/07/see-how-your-project-performs-at-travis-ci</id>
    <content type="html"><![CDATA[<p>Many people run their test suite at Travis CI these days. At Travis you got the possibility to run your test suite against different programming languages and different versions of these ( e.g. node 0.8 / 0.9 / … ). Figuring out if there will be any problems or exceptions before switching to a new language version are easily done this way ( always assuming you are following the principles of test driven development ). <strong>Test your stuff at Travis first, then switch your server to the new version of language XY</strong>.</p>

<!-- more -->


<p>Tests that run in different languages are called &lsquo;jobs&rsquo; in travis context. You can define them in your .travis.yml.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>language: node_js
</span><span class='line'>  node_js:
</span><span class='line'>    - "0.8"
</span><span class='line'>    - "0.9"
</span><span class='line'>    - "0.10"</span></code></pre></td></tr></table></div></figure>


<p>Later on you can see this configuration inside of the so called build-matrix at <a href="http://travis-ci.org">Travis</a>.</p>

<p><img class="center" src="http://4waisenkinder.github.io/images/blog/stefanjudis/buildMatrix.png" width="1225" height="184" title="build matrix cushion-cli" alt="build matrix for my project cushion-cli"></p>

<p>Via Travalizit ( <a href="http://4waisenkinder.de/blog/2013/06/21/help-me-analyze-travis-build-data/">further explanation and introduction</a> ) you got the possibility to analyse your Travis build data. It is still in early stage, but I think you can already get some information, you did not know before. To have always the latest Travis information at Travalizit you only have to define a wekhook that sends the build data to Travalizit each time you finished a build ( checkout out explanation and introduction ).</p>

<p>Yesterday night I implemented a new chart to compare different builds with including jobs in term of state and duration. With the help of this chart you can easily check if a new language version will increase performance or not.</p>

<p>To check your project just go to <a href="http://travalizit.org">Travalizit</a>, add a new chart and choose type &ldquo;Travis job details&rdquo;.</p>

<p><img class="center" src="http://4waisenkinder.github.io/images/blog/stefanjudis/jobDetails.png" width="603" height="377" title="add job details chart action" alt="push the button ;)"></p>

<p>After that you will probably get a message, that your build data is not included in the Travalizit database ( there is the small chance that it is, because I tested a lot ). Right now you got the possibility to fetch the latest builds from Travis.</p>

<p><img class="center" src="http://4waisenkinder.github.io/images/blog/stefanjudis/fetchData.png" width="867" height="655" title="fetch data action" alt="fetch data dialog if no build data is available"></p>

<p>Press the &lsquo;fetch&rsquo; &ndash; button and you are done. This works only <strong>once</strong>, because the architecture is actual set up to receive recent build data via webhook. That means, if you want to come back and to see the latest builds, you have implement the hook. ;)</p>

<p>And that is the result:</p>

<p><img class="center" src="http://4waisenkinder.github.io/images/blog/stefanjudis/jobDetailsChart.png" width="882" height="670" title="job details for cushion-cli" alt="Travis job details chart for cushion-cli"></p>

<p>Right now you can check the duration and state ( passed / errored / failed ) of the different jobs. If you want to see more, let me know.</p>

<p>I would love to hear wishes, improvements and feedback. So, if it is not working for you and your project or you have something to say about that ping me on <a href="https://twitter.com/stefanjudis">Twitter</a>, write me an <a href="mailto:stefanjudis@gmail.com">email</a> or leave a comment.</p>

<p>THX.</p>

<p>PS. I started developing a <a href="https://npmjs.org/package/travalizit">Nodes.js Travis-Api</a> for this project. If someone is interested in that, give a sign. That keeps motivation high. ;)</p>
<div class='octopress-authorbox'>
	<div class="author-pic">
		<img src="http://www.gravatar.com/avatar/22725c2d3eb331146549bf0d5d3c050c" alt="Stefan Judis" />
	</div>
	
	<div class="author-about">
		<h3>Stefan Judis</h3>
		<p>Frontend lover</p>
		<ul class="author-links">
			
			<li>
			<a href="http://twitter.com/stefanjudis">@stefanjudis</a>
			</li>
			
			
		</ul>
	</div>
</div>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Show npm statistics at terminal start]]></title>
    <link href="http://4waisenkinder.github.io/blog/2013/06/24/show-npm-statistics-terminal-start/"/>
    <updated>2013-06-24T22:21:00+02:00</updated>
    <id>http://4waisenkinder.github.io/blog/2013/06/24/show-npm-statistics-terminal-start</id>
    <content type="html"><![CDATA[<p>Two month ago I released my <a href="https://npmjs.org/package/cushion-cli">first npm module</a>. I got really excited (and I am still) about releasing something and showing it to the world. Since then the statistics written on top of the module page at NPM are checked by me on a daily basis. Unfortunately these statistics do not seem to be really precise. They are jumping from day to day and should not be taken to serious in my mind (No offense meant. I really like NPM and I think it is a great service).</p>

<p>That is the reason why a friend of mine wrote a <a href="https://raw.github.com/Zoddy/geektool-desk/master/os_downloads.js">tiny script</a> to read the statistics directly from where the data is stored &ndash; a <a href="http://isaacs.iriscouch.com/">CouchDB</a> available for everyone. The script will be part of a <a href="https://github.com/Zoddy/geektool-desk">library for geeky stuff</a> and tools later on, but that is another story.</p>

<p>Today I had the idea about showing this kind of information whenever I open a new terminal window to save some time and &ldquo;pimp my terminal&rdquo;.</p>

<!-- more -->


<p>I googled a bit and had to notice that it is not to easy to execute scripts on MacOS in the <code>/etc/motd</code> (message of the day). It seems to be much easier in the linux world &ndash; correct me when I&rsquo;m wrong please. ;)</p>

<p>So I decided to execute the whole stuff inside of the shell configuration files placed in the given user root (information about NPM modules are probably user related, so after a bit of thinking I like that solution even more).</p>

<p>To start you have to clone the Github project with the mentioned script (in my case <code>~/Sites/</code>).</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git clone https://github.com/Zoddy/geektool-desk.git</span></code></pre></td></tr></table></div></figure>


<p>After that we start editing the .bash_profile, .bashrc, .zshrc or whatever shell file your system and shell gives you.</p>

<p>I prefer using ZSH. Adding the following lines does all the magic for me &ndash; look at this <a href="https://github.com/Zoddy/geektool-desk">readme</a> for further explanation how to use the script. This example is made for my &lsquo;cushion-cli&rsquo; project. I think you are not interested in this data, so please feel free to change it to your project names.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>### show cushion-cli downloads
</span><span class='line'>
</span><span class='line'>echo "\nCUSHION-CLI DOWNLOADS\n"
</span><span class='line'>
</span><span class='line'>echo "TODAY / YESTERDAY:"
</span><span class='line'>today=$(node /Users/stefan/Sites/geektool-desk/os_downloads.js cushion-cli today)
</span><span class='line'>yesterday=$(node /Users/stefan/Sites/geektool-desk/os_downloads.js cushion-cli yesterday)
</span><span class='line'>printf "%s / %s downloads\n\n" "$today" "$yesterday"
</span><span class='line'>
</span><span class='line'>echo 'CURRENT WEEK / LAST WEEK:'
</span><span class='line'>week=$(node /Users/stefan/Sites/geektool-desk/os_downloads.js cushion-cli current-week)
</span><span class='line'>last_week=$(node /Users/stefan/Sites/geektool-desk/os_downloads.js cushion-cli last-week)
</span><span class='line'>printf "%s / %s downloads\n\n" "$week" "$last_week"
</span><span class='line'>
</span><span class='line'>echo 'CURRENT MONTH / LAST MONTH:'
</span><span class='line'>month=$(node /Users/stefan/Sites/geektool-desk/os_downloads.js cushion-cli current-month)
</span><span class='line'>last_month=$(node /Users/stefan/Sites/geektool-desk/os_downloads.js cushion-cli last-month)
</span><span class='line'>printf "%s / %s downloads\n\n" "$month" "$last_month"</span></code></pre></td></tr></table></div></figure>


<p>I am not a shell script wizard. If something is not correct with these lines let me know.</p>

<p>And that is the result. Hope you enjoy it.</p>

<p><img class="right" src="http://4waisenkinder.github.io/images/blog/stefanjudis/npmPrompt.png" width="254" height="233" title="prompt with npm statistic" alt="prompt with npm statistic for cushion-cli"></p>
<div class='octopress-authorbox'>
	<div class="author-pic">
		<img src="http://www.gravatar.com/avatar/22725c2d3eb331146549bf0d5d3c050c" alt="Stefan Judis" />
	</div>
	
	<div class="author-about">
		<h3>Stefan Judis</h3>
		<p>Frontend lover</p>
		<ul class="author-links">
			
			<li>
			<a href="http://twitter.com/stefanjudis">@stefanjudis</a>
			</li>
			
			
		</ul>
	</div>
</div>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Help me analyze travis build data]]></title>
    <link href="http://4waisenkinder.github.io/blog/2013/06/21/help-me-analyze-travis-build-data/"/>
    <updated>2013-06-21T14:30:00+02:00</updated>
    <id>http://4waisenkinder.github.io/blog/2013/06/21/help-me-analyze-travis-build-data</id>
    <content type="html"><![CDATA[<p>Hey, I study Media and Computer Science in Berlin and I need your help.
The last goal of my studies is to write my bachelor thesis and I want to show you what it is about.</p>

<p>I am in colaboration with <a href="http://travis-ci.org">Travis CI</a> (you may have heard about it) and my goal is to analyse the data Travis produces everyday. Data about every build that is triggered by any open source project over the world doing continuous integration.</p>

<!-- more -->


<p>Travis provides the possibility to implement webhooks. Webhooks are part of the <a href="http://about.travis-ci.org/docs/user/notifications/">travis notifications</a> and are simple HTTP post requests to a given end point you define in your .travis.yml file (the general travis configuration file) triggered whenever a build at travis-ci end (no matter if successful or not). These requests include general data of the last build.</p>

<p>I already built up a <a href="http://travalizit.org">web app</a> to play around with the data. Right now there are three charts included. One is showing the success/fail ratio of all builds in a particular time interval. Another one shows the distribution of different projects included in a given time.</p>

<p>And the last one at the moment is one chart including data fetched from github.</p>

<p><img class="center" src="http://4waisenkinder.github.io/images/blog/stefanjudis/repochart.png" width="788" height="532" title="repo chart travalizit" alt="repo chart for my repo cushion-cli"></p>

<p>I&rsquo;m really excited about this one. What you see in there are the last 20 builds (left side) of <a href="https://github.com/stefanjudis/cushion-cli">one of my private projects</a>. The nice thing about that is, that all the commits (right side) related to a given build are fetched from the github api. That means you can quickly figure out, which files are often causing a failed build (marked black and not red &ndash; like build with number 180).</p>

<p>With the information provided by github I could build up a tool to answer a lot of questions.</p>

<ul>
<li>which files are touched more often and cause broken builds?</li>
<li>how many commits are needed to fix a broken build?</li>
<li>how long does it generally take to fix a broken build?</li>
<li>how many commits included in one build cause a broken build?</li>
<li>how many different contributors cause a broken build?</li>
</ul>


<p>I don&rsquo;t know If it is possible and/or valid to answer these questions with given data, but I would like to try to answer a few of them. And the point is:</p>

<h4>If only one person really hears something new about his/her project it would be already a win.</h4>

<p><strong>And hear is where you come into the game.</strong> When you use Travis CI please share your build data with me by implementing the webhook pointing to my webapp in your .travis.yml (just put it at the bottom of the file).</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>notifications:
</span><span class='line'>  webhooks: http://travalizit.org/builds</span></code></pre></td></tr></table></div></figure>


<p>Your data will be written into my database and will then be included into the charts.</p>

<p>And after that please share your ideas about what you would like to see and what would be useful for you and your project with me. Drop me a line on <a href="https://twitter.com/stefanjudis">Twitter</a> or send me an <a href="mailto:stefanjudis@gmail.com">email</a>. That would be just great.</p>

<p>The app is at a quite early stage right now, so if something is not working as expected or you see improvements get in touch as well.</p>

<h4>Let us build something useful. ;)</h4>
<div class='octopress-authorbox'>
	<div class="author-pic">
		<img src="http://www.gravatar.com/avatar/22725c2d3eb331146549bf0d5d3c050c" alt="Stefan Judis" />
	</div>
	
	<div class="author-about">
		<h3>Stefan Judis</h3>
		<p>Frontend lover</p>
		<ul class="author-links">
			
			<li>
			<a href="http://twitter.com/stefanjudis">@stefanjudis</a>
			</li>
			
			
		</ul>
	</div>
</div>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Why work doesn't happen at work]]></title>
    <link href="http://4waisenkinder.github.io/blog/2013/06/09/why-work-doesnt-happen-at-work/"/>
    <updated>2013-06-09T14:00:00+02:00</updated>
    <id>http://4waisenkinder.github.io/blog/2013/06/09/why-work-doesnt-happen-at-work</id>
    <content type="html"><![CDATA[<p>I believe our working models and how we collaborate have to change. They
haven&rsquo;t for years. In fact, they haven&rsquo;t changed much since the beginning of
the 20th century: most of us sit in offices, at dedicated desks, participate
in meetings now and then and hope to achive set goals within a reasonable time
span.</p>

<!-- more -->


<p>Altough there is not solution yet, we&rsquo;re at the verge of dicovering it. Jason
Fried has a radical theory of working: that the office isn&rsquo;t a good place to
do it. He helt an inspiring talk at TEDxMidwest in October 2010.</p>

<blockquote><p>[Facebook and Twitter] aren’t the real problems in the office. The real <br/>problems are what I like to call the M&Ms, the Managers and the Meetings.</p></blockquote>




<div class="embed-video-container"><iframe src="http://www.youtube.com/embed/5XD2kNopsUs "></iframe></div>


<h3>About Jason</h3>

<p>He thinks deeply about collaboration, productivity and the nature of work. At
TEDxMidwest he lays out the main problems (call them the M&amp;Ms) and offers
three suggestions to make work work.</p>

<p>Fried is the co-author of the book Rework, about new ways to conceptualize
working and creating. He is the co-founder and president of
<a href="http://37signals.com/">37signals</a>, a Chicago-based company that builds
webbased productivity tools that, in their words, &ldquo;do less than the
competition &ndash; intentionally.&rdquo; 37signals&#8217; simple but powerful collaboration
tools include Basecamp, Highrise, Backpack, Campfire, Ta-da List, and
Writeboard. 37signals also developed and open-sourced the Ruby on Rails
programming framework.</p>

<h5>Sources:</h5>

<p><a href="http://www.ted.com/speakers/jason_fried.html">Jason&rsquo;s Speaker Profile on TED.com</a>,
<a href="http://www.ted.com/talks/jason_fried_why_work_doesn_t_happen_at_work.html">Jason&rsquo;s Talk on TED.com</a></p>
<div class='octopress-authorbox'>
	<div class="author-pic">
		<img src="http://www.gravatar.com/avatar/130112610052d9dad8ddb687038a31fa" alt="Patrick Venetz" />
	</div>
	
	<div class="author-about">
		<h3>Patrick Venetz</h3>
		<p>Web developer, in pursuit of sagacity</p>
		<ul class="author-links">
			
			<li>
			<a href="http://twitter.com/patrickvenetz">@patrickvenetz</a>
			</li>
			
			
		</ul>
	</div>
</div>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Dynamic he.net IPV6 Tunnel Updates With Fritzbox]]></title>
    <link href="http://4waisenkinder.github.io/blog/2013/06/06/dynamic-ipv6-tunnel-updates-between-hurricane-electric-and-your-fritzbox/"/>
    <updated>2013-06-06T11:03:00+02:00</updated>
    <id>http://4waisenkinder.github.io/blog/2013/06/06/dynamic-ipv6-tunnel-updates-between-hurricane-electric-and-your-fritzbox</id>
    <content type="html"><![CDATA[<h2>TL;DR:</h2>

<p>Associate your tunnel with a dynamically updated hostname from a subomain at
dns.he.net, use that host for fritzbox&#8217;es user-defined dynamic dns feature and
hardcode your tunnelid into the &ldquo;Dynamic DNS provider&rdquo; url.</p>

<h1>The Problem:</h1>

<!-- more -->


<p><a href="https://he.net">Hurricane Electric (he.net)</a> provides excellent free IPv6
tunnels at <a href="https://tunnelbroker.net">tunnelbroker.net</a> together with free dns
hosting.  If you don&rsquo;t have an account yet, head over there now and open one up.
Do it now, you won&rsquo;t regret it. I&rsquo;ll wait.</p>

<p>Users of the popular <a href="http://www.avm.de/de/Produkte/FRITZBox/">FRITZ!Box</a> home
router enjoy some ipv6 support out of the box, i.e.
<a href="http://www.sixxs.net">SixXs.net</a>-tunnels can be configured via the gui:</p>

<p><img class="center" src="http://4waisenkinder.github.io/images/blog/bkw/fritzbox-sixx.png" width="665" height="177" title="fritzbox sixxs tunnel config gui" alt="fritzbox gui screenshot"></p>

<p>SixXs.net supports a protocol to remotely manage your tunnel endpoint.
However, he.net tunnels use the plain <a href="http://en.wikipedia.org/wiki/6in4">6in4</a>
mechanism, which is designed for static endpoints.</p>

<p><img class="center" src="http://4waisenkinder.github.io/images/blog/bkw/fritzbox-6in4.png" width="553" height="177" title="fritzbox 6in4 tunnel config gui" alt="fritzbox gui screenshot"></p>

<p>This implies your remote tunnel endpoint is configured to point to one specific
ip address at your end, presumably the one you had when you created the tunnel.</p>

<p><strong>This means that whenever your ISP gives you a new ip, your tunnel stops working.</strong></p>

<p>To remedy this, he.net provides a
<a href="http://www.tunnelbroker.net/forums/index.php?topic=1994.0">dyndns compatible update mechanism</a>
to update your tunnel endpoint remotely. Fritzbox also supports adding
user-defined dyndns providers. So the naïve approach is to add he.net&rsquo;s url
into the gui and use the tunnel id as a hostname, like
<a href="http://www.tunnelbroker.net/forums/index.php?topic=1994.0">the documentation</a>
suggests.</p>

<p>Unfortunately (but very sensibly) fritzbox checks the dns record of the host to
be updated before it actually calls the service. This makes perfect sense:
Updates are only performed when neccessary. But in our case, the value of the
hostname field is not an existing host, it&rsquo;s the tunnel id. The alternative
hostnames (tunnel#.tunnelbroker.net, user-#.tunnel.tserv#.loc#.ipv6.he.net)
also do not resolve. This results in the following log message on your fritzbox:</p>

<pre><code>    Dynamic DNS error: Dynamic DNS update is disabled until the dynamic DNS registration data are changed.
    Dynamic DNS error: The specified domain name cannot be resolved.
</code></pre>

<h1>The Solution</h1>

<p>he.net offers another cool feature: If you host a domain or subdomain on their
free dns service at <a href="https://dns.he.net/">dns.he.net</a>, you can enable dynamic
updates for a hostname and have your tunnel endpoint updates set the dns record
for that hostname, too! Let&rsquo;s walk through this:</p>

<p>You can either:</p>

<ul>
<li><p>move the dns of the whole domain to dns.he.net by updating the NS-records at your current provider/registrar, or:</p></li>
<li><p>use a subdomain and delegate it to dns.he.net. Just create NS records for
something like <code>home.example.com</code> pointing to ns2.he.net, ns3.he.net, ns4.he.net and ns5.he.net.</p></li>
</ul>


<p>Either way, you should now have a (sub-)domain that you can control via
dns.he.net. Create a host in that zone with any ip address and select <strong>enable
entry for dynamic dns</strong>.</p>

<p><img class="left" src="http://4waisenkinder.github.io/images/blog/bkw/dns-henet-dynamic.png" width="605" height="325" title="dns.he.net dynamic host update gui" alt="dns.he.net gui screenshot"></p>

<p>Next, in the listing of your domain&rsquo;s records, click the refresh symbol in this host&rsquo;s DDNS column:</p>

<p><img class="left" src="http://4waisenkinder.github.io/images/blog/bkw/dns-henet-dynamic-key.png" width="843" height="333" title="dns.he.net dynamic host update gui" alt="dns.he.net gui screenshot"></p>

<p>Generate a key to use for updates to this host:</p>

<p><img class="left" src="http://4waisenkinder.github.io/images/blog/bkw/dns-henet-dynamic-key2.png" width="606" height="288" title="dns.he.net dynamic host update gui" alt="dns.he.net gui screenshot"></p>

<p>Save that key, you&rsquo;ll need it in a minute.</p>

<p>Now head over to <a href="https://tunnelbroker.net">tunnelbroker.net</a>, open up your
tunnel&rsquo;s details and select the <strong>Advanced</strong> tab. Enter the dynamic hostname you configured in the last step and the key you generated.</p>

<p><img class="left" src="http://4waisenkinder.github.io/images/blog/bkw/tunnelbroker-dynamic-host.png" width="606" height="288" title="tunnelbroker dynamic host update gui" alt="tunnelbroker.net gui screenshot"></p>

<p>Now, whenever the tunnel endpoint is updated, the hostname <em>gw.home.example.com</em> will be updated to your router&rsquo;s ipv4 address as well.</p>

<p><strong>This allows us to use a valid and up-to-date host in the dynamic dns updater
of the fritzbox.</strong></p>

<p>Head over to your fritzbox GUI.</p>

<p>Open Internet/Account Information/IPv6, check <em>IPv6 support enabled</em> and
<em>Always use a tunnel protocol for the IPv6 connection</em>. Select tunnel protocol
<em>6in4</em> in <em>Connection Settings</em>, fill in the values from your tunnel details
page at tunnelbroker.net and hit <em>Apply</em>.</p>

<h2>Now for the hack:</h2>

<p>Open Internet/Permit Access/Dynamic DNS, check <em>Use dynamic DNS</em> and select
<em>User-defined</em> for <em>Dynamic DNS provider</em>.</p>

<p><img class="left" src="http://4waisenkinder.github.io/images/blog/bkw/fritzbox-dyndns.png" width="606" height="288" title="fritzbox dyndns gui" alt="fritzbox gui screenshot"></p>

<p>Enter the following URL for <em>Update URL</em>, replacing <em>123456</em> with the id of
your he.net tunnel:</p>

<pre><code>http://ipv4.tunnelbroker.net/nic/update?hostname=123456&amp;myip=&lt;ipaddr&gt;&amp;username=&lt;username&gt;&amp;password=&lt;pass&gt;
</code></pre>

<p>Do not replace the placeholders in angle brackets, your fritzbox will do that.</p>

<p>Enter the dynamic host you configured earlier in the <em>Domain name</em> field.
This will be used by the fritzbox to check whether the update needs to be
performed.</p>

<p>Enter your he.net username and password in the respective fields.</p>

<p>Hit <em>Apply</em> and enjoy an auto updating IPv6 tunnel to hurricane electric.</p>

<h2>How does this work?</h2>

<p>The dynamic hostname (which is kept in sync by hurricane electric) is used for
checking for changes, but the actual update is performed on the tunnel id hardcoded in the <em>Update URL</em>.</p>

<h2>Bonus</h2>

<p>As a useful side effect, from now on you can always reach your router and any
port-forwared services under you own hostname <em>(gw.home.example.com)</em> in your
very own domain!  How cool is that?</p>

<p>Actually, now that you have IPv6, you don&rsquo;t really need those
pesky port forwards any more: just assign any v6 address you like and use
plain internet routing the way it was supposed to work in the first place.</p>
<div class='octopress-authorbox'>
	<div class="author-pic">
		<img src="http://www.gravatar.com/avatar/ba794f1084b2a876705e2679c197c630" alt="Bernhard K. Weisshuhn" />
	</div>
	
	<div class="author-about">
		<h3>Bernhard K. Weisshuhn</h3>
		<p>Serial CTO and technology procrastinator</p>
		<ul class="author-links">
			
			<li>
			<a href="http://twitter.com/bernhorst">@bernhorst</a>
			</li>
			
			
		</ul>
	</div>
</div>]]></content>
  </entry>
  
</feed>
